{"version":3,"file":"bundle.js","mappings":";;;;;AAAa;AACb;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://9994.typescript/./src/index.ts"],"sourcesContent":["\"use strict\";\nfunction greet(name) {\n    return `안녕, ${name}~!`;\n}\nconsole.log(greet(\"찐친 개발자\"));\nconsole.log(greet(\"코딩 마스터\"));\nconsole.log(greet(\"AI 전문가\"));\nconsole.log(greet(\"프로그래머\"));\n// 1. 기본 타입 선언\nconst userName = \"김상중하\";\nconst age = 20;\nconst isActive = true;\nconsole.log(\"기본타입\");\nconsole.log(userName, age, isActive);\n// 2. 배열 타입 선언\nconst numbers = [1, 2, 3, 4];\nconst names = [\"김상중하\", \"코딩 마스터\", \"프로그래머\"];\nconsole.log(\"배열타입\");\nconsole.log(numbers);\nconsole.log(names);\n// 3. 튜플(Tuple) 타입 선언\nconst userInfo = [\"김상중하\", 20];\nconsole.log(\"튜플타입\");\nconsole.log(userInfo);\n// 4. 유니온 타입 선언\nconst unionType = \"Loading\";\nconsole.log(\"유니온타입\");\nconsole.log(unionType);\n// 위에 데이터 형을 적용한 새로운 변수선언 할당\nconst user1 = {\n    name: \"Alice\",\n    age: 25,\n};\nconsole.log(\"객체타입\");\nconsole.log(user1);\n"],"names":[],"sourceRoot":""}